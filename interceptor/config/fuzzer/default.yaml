default_compiler: &compiler
  add_arguments:
  - "-g"
  - "-O2"
  remove_arguments:
  - "-O0"
  - "-O1"
  - "-O3"
  - "-fomit-frame-pointer"

default:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: ""
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: ""


libfuzzer:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: "clang"
      add_arguments:
      - "-g"
      - "-fsanitize=address,undefined,signed-integer-overflow"
      - "-fsanitize-coverage=edge,indirect-calls,trace-pc-guard,trace-cmp"
      - "-fno-omit-frame-pointer"
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: "clang++"

afl-gcc:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: "afl-gcc"
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: "afl-g++"

afl-clang:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: "afl-clang"
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: "afl-clang++"

honggfuzz-gcc:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: "hfuzz-gcc"
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: "hfuzz-g++"

honggfuzz-clang:
  toolchain:
    cc:
      <<: *compiler
      match: "DEFAULT_CC"
      replace: "hfuzz-clang"
    cxx:
      <<: *compiler
      match: "DEFAULT_CXX"
      replace: "hfuzz-clang++"
